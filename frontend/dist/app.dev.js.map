{"version":3,"sources":["app.js"],"names":["finalText","speechOutput","document","getElementById","startRecognition","recognition","webkitSpeechRecognition","lang","onresult","event","results","transcript","textContent","start","translateText","alert","targetLang","value","fetch","method","headers","body","JSON","stringify","text","res","json","data","console","log","translatedText"],"mappings":";;AAAA,IAAIA,SAAS,GAAG,EAAhB;AACA,IAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAArB;;AAEA,SAASC,gBAAT,GAA4B;AAC1B,MAAMC,WAAW,GAAG,IAAIC,uBAAJ,EAApB;AACAD,EAAAA,WAAW,CAACE,IAAZ,GAAmB,OAAnB;;AACAF,EAAAA,WAAW,CAACG,QAAZ,GAAuB,UAACC,KAAD,EAAW;AAChCT,IAAAA,SAAS,GAAGS,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,UAAhC;AACAV,IAAAA,YAAY,CAACW,WAAb,uBAAwCZ,SAAxC;AACD,GAHD;;AAIAK,EAAAA,WAAW,CAACQ,KAAZ;AACD;;AAED,SAAeC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACOd,SADP;AAAA;AAAA;AAAA;;AAEIe,UAAAA,KAAK,CAAC,+BAAD,CAAL;AAFJ;;AAAA;AAMQC,UAAAA,UANR,GAMqBd,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0Cc,KAN/D;AAAA;AAAA,0CAOoBC,KAAK,CAAC,qCAAD,EAAwC;AAC7DC,YAAAA,MAAM,EAAE,MADqD;AAE7DC,YAAAA,OAAO,EAAE;AAAE,8BAAgB;AAAlB,aAFoD;AAG7DC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,cAAAA,IAAI,EAAExB,SAAR;AAAmBgB,cAAAA,UAAU,EAAVA;AAAnB,aAAf;AAHuD,WAAxC,CAPzB;;AAAA;AAOQS,UAAAA,GAPR;AAAA;AAAA,0CAaqBA,GAAG,CAACC,IAAJ,EAbrB;;AAAA;AAaQC,UAAAA,IAbR;AAcEC,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAzB,EAdF,CAckC;;AAEhCzB,UAAAA,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,EAA6CS,WAA7C,GACEe,IAAI,CAACG,cAAL,0BAAsCH,IAAI,CAACG,cAA3C,IAA8D,qBADhE;;AAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["let finalText = '';\r\nconst speechOutput = document.getElementById('speechOutput');\r\n\r\nfunction startRecognition() {\r\n  const recognition = new webkitSpeechRecognition();\r\n  recognition.lang = 'en-US';\r\n  recognition.onresult = (event) => {\r\n    finalText = event.results[0][0].transcript;\r\n    speechOutput.textContent = `You said: ${finalText}`;\r\n  };\r\n  recognition.start();\r\n}\r\n\r\nasync function translateText() {\r\n  if (!finalText) {\r\n    alert(\"Please speak something first!\");\r\n    return;\r\n  }\r\n\r\n  const targetLang = document.getElementById('languageSelect').value;\r\n  const res = await fetch('http://localhost:5000/api/translate', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ text: finalText, targetLang })\r\n  });\r\n\r\n  const data = await res.json();\r\n  console.log('Response:', data); // ðŸ‘ˆ Log to debug\r\n\r\n  document.getElementById('translationResult').textContent =\r\n    data.translatedText ? `Translation: ${data.translatedText}` : 'Translation failed!';\r\n}\r\n"],"file":"app.dev.js"}