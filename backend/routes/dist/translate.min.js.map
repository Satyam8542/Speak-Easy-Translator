{"version":3,"sources":["translate.js"],"names":["express","require","router","Router","db","post","req","res","_req$body","text","targetLang","response","translatedText","regeneratorRuntime","async","_context","prev","next","body","console","log","awrap","axios","q","source","target","format","headers","Content-Type","sent","data","t0","error","message","status","json","stop","module","exports"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,OAASF,QAAQG,SADjBH,MAAUC,QAAQ,SAGlBG,GAAKH,QAAQ,SAEnBC,OAAOG,KAAK,IAAK,SAAOC,EAAKC,GAAZ,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAT,EAHjBF,EAAAY,KAAWT,EAGMD,EAHNC,KAAGR,EAGGO,EAHHP,WAKZkB,QAAQC,IAAI,iBAAkBX,GAJhCU,QAAWlB,IAAAA,mBAAXS,GAEiBK,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAQ,MAAAC,MAAAjB,KAAA,kCAAA,CAOXkB,EAAGd,EAPQe,OAAA,KAAAC,OAAAf,EAAAgB,OAAA,QAAA,CAAAC,QAAA,CAAAC,eACPnB,uBADO,KAAA,EAAAE,EAAAI,EAAAc,KAAAV,QAAAC,IAAA,4BAAAT,EAAAmB,MAAAlB,EAAAD,EAAAmB,KAAAlB,eASXa,GAAAA,MAAAA,0GACAC,CAAAA,EAAAA,EAAQ,KAAAhB,IAERiB,EAAAA,KAAAA,CAAAA,eAAAA,IAZWZ,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAA,MAAA,GAYFI,QAAAa,MAAA,qBAAAjB,EAAAgB,GAAAE,SADR1B,EAAA2B,OAXU,KAAAC,KAAA,CAAAH,MAAA,uBAAA,KAAA,GAAA,IAAA,MAAA,OAAAjB,EAAAqB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,QA+BjBC,OAAOC,QAAUpC","file":"translate.min.js","sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst axios = require('axios');\r\nconst db = require('../db');\r\n\r\nrouter.post('/', async (req, res) => {\r\n  const { text, targetLang } = req.body;\r\n  console.log('Received text:', text);\r\n  console.log('Target language:', targetLang);\r\n\r\n  try {\r\n    const response = await axios.post('http://localhost:5001/translate', {\r\n      q: text,\r\n      source: 'en',\r\n      target: targetLang,\r\n      format: 'text'\r\n    }, {\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n\r\n    console.log('Translation API response:', response.data); // ðŸ‘ˆ Add this\r\n\r\n    const translatedText = response.data.translatedText;\r\n    \r\n    // Save to DB\r\n    db.query('INSERT INTO translations (original_text, translated_text, source_lang, target_lang) VALUES (?, ?, ?, ?)',\r\n      [text, translatedText, 'en', targetLang]);\r\n\r\n    res.json({ translatedText });\r\n  } catch (err) {\r\n    console.error('Translation Error:', err.message); // ðŸ‘ˆ Add this\r\n    res.status(500).json({ error: 'Translation failed' });\r\n  }\r\n});\r\n\r\n\r\nmodule.exports = router;"]}